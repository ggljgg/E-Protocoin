#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from time import time


class Block:
    """ A block which can be added to a block chain.

    Attributes:
        :index (private): The index of this block.
        :previous_hash (private): The hash of the previous block in the
                                  block chain.
        :transactions (private): A list of transaction which are included in
                                 the block.
        :proof (private): The proof of work number that yielded this block.
        :timestamp (private): The timestamp of the block (automatically
                              generated by default).
    """

    def __init__(self, index, previous_hash,
                 tx_list, proof, timestamp=time()):
        """ The constructor of the Block class. """
        self.__index = index
        self.__previous_hash = previous_hash
        self.__transactions = tx_list
        self.__proof = proof
        self.__timestamp = timestamp

    @property
    def index(self):
        """ Returns the index of block. """
        return self.__index

    @property
    def previous_hash(self):
        """ Returns the previous hash of block. """
        return self.__previous_hash

    @property
    def transactions(self):
        """ Returns the transactions of block. """
        return self.__transactions

    @property
    def proof(self):
        """ Returns the proof of block. """
        return self.__proof

    @property
    def timestamp(self):
        """ Returns the timestamp of block. """
        return self.__timestamp

    def to_dict(self):
        """ Converts the current block into a serializable dictionary. """
        return {
            'index': self.__index,
            'previous_hash': self.__previous_hash,
            'proof': self.__proof,
            'timestamp': self.__timestamp,
            'transactions': self.__transactions.to_list()
        }
